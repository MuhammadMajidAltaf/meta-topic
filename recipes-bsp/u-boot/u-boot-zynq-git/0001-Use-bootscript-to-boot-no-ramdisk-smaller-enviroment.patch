From be27969913760baa80b653c86318c1181a72dd36 Mon Sep 17 00:00:00 2001
From: Mike Looijmans <mike.looijmans@topic.nl>
Date: Mon, 27 Jan 2014 08:17:34 +0100
Subject: [PATCH 01/10] Use bootscript to boot, no ramdisk, smaller enviroment

Check for autorun bootscript and run it from SD.
Boot without ramdisk because we expect real filesystems (ubi or ext4).
Set SPI speed to 50MHz (most chips can even do 100 with fast_read).
Omit environments that can't be used (e.g. NOR, NAND, RSA) when their
configs aren't defined.
---
 include/configs/zynq-common.h | 155 ++++++++++++++++++++++--------------------
 1 file changed, 81 insertions(+), 74 deletions(-)

diff --git a/include/configs/zynq-common.h b/include/configs/zynq-common.h
index 67083c1..d601426 100644
--- a/include/configs/zynq-common.h
+++ b/include/configs/zynq-common.h
@@ -31,6 +31,33 @@
 	{300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400}
 
 /* DCC driver */
+#if defined(CONFIG_CMD_ZYNQ_RSA)
+# define CONFIG_EXTRA_ENV_RSA_BOOT \
+	"boot_image=BOOT.bin\0"	\
+	"rsa_norboot=echo Copying Image from NOR flash to RAM... && " \
+		"cp.b 0xE2100000 0x100000 ${boot_size} && " \
+		"zynqrsa 0x100000 && " \
+		"bootm 0x3000000 0x2000000 0x2A00000\0" \
+	"rsa_nandboot=echo Copying Image from NAND flash to RAM... && " \
+		"nand read 0x100000 0x0 ${boot_size} && " \
+		"zynqrsa 0x100000 && " \
+		"bootm 0x3000000 0x2000000 0x2A00000\0" \
+	"rsa_qspiboot=echo Copying Image from QSPI flash to RAM... && " \
+		"sf probe 0 0 0 && " \
+		"sf read 0x100000 0x0 ${boot_size} && " \
+		"zynqrsa 0x100000 && " \
+		"bootm 0x3000000 0x2000000 0x2A00000\0" \
+	"rsa_sdboot=echo Copying Image from SD to RAM... && " \
+		"fatload mmc 0 0x100000 ${boot_image} && " \
+		"zynqrsa 0x100000 && " \
+		"bootm 0x3000000 0x2000000 0x2A00000\0" \
+	"rsa_jtagboot=echo TFTPing Image to RAM... && " \
+		"tftp 0x100000 ${boot_image} && " \
+		"zynqrsa 0x100000 && " \
+		"bootm 0x3000000 0x2000000 0x2A00000\0"
+#else
+# define CONFIG_EXTRA_ENV_RSA_BOOT ""
+#endif
 #if defined(CONFIG_ZYNQ_DCC)
 # define CONFIG_ARM_DCC
 # define CONFIG_CPU_V6 /* Required by CONFIG_ARM_DCC */
@@ -81,6 +108,11 @@
 # undef CONFIG_SYS_FLASH_PROTECTION
 # define CONFIG_SYS_FLASH_USE_BUFFER_WRITE
 # define CONFIG_ZYNQ_M29EW_WB_HACK
+# define CONFIG_EXTRA_ENV_NOR_BOOT \
+	"norboot=echo Boot from NOR flash...;" \
+		"bootm 0xE2100000 - 0xE2600000\0"
+#else
+# define CONFIG_EXTRA_ENV_NOR_BOOT ""
 #endif
 
 /* MMC */
@@ -101,7 +133,15 @@
 # define CONFIG_USB_ULPI
 # define CONFIG_EHCI_IS_TDI
 # define CONFIG_USB_MAX_CONTROLLER_COUNT	2
-
+# define CONFIG_EXTRA_ENV_USB_BOOT \
+	"usbboot=if usb start; then " \
+			"run uenvboot; " \
+			"echo Copying from USB to RAM... && " \
+			"fatload usb 0 0x3000000 ${kernel_image} && " \
+			"fatload usb 0 0x2A00000 ${devicetree_image} && " \
+			"fatload usb 0 0x2000000 ${ramdisk_image} && " \
+			"bootm 0x3000000 0x2000000 0x2A00000; " \
+		"fi\0"
 # define CONFIG_CI_UDC           /* ChipIdea CI13xxx UDC */
 # define CONFIG_USB_GADGET
 # define CONFIG_USB_GADGET_DUALSPEED
@@ -147,6 +187,8 @@
 #  define DFU_ALT_INFO	\
 	DFU_ALT_INFO_RAM
 # endif
+#else
+# define CONFIG_EXTRA_ENV_USB_BOOT ""
 #endif
 
 #if !defined(DFU_ALT_INFO)
@@ -157,16 +199,14 @@
 # define CONFIG_SUPPORT_VFAT
 # define CONFIG_CMD_FAT
 # define CONFIG_CMD_EXT2
-# define CONFIG_FAT_WRITE
 # define CONFIG_DOS_PARTITION
 # define CONFIG_CMD_EXT4
-# define CONFIG_CMD_EXT4_WRITE
 # define CONFIG_CMD_FS_GENERIC
 #endif
 
 /* QSPI */
 #ifdef CONFIG_ZYNQ_QSPI
-# define CONFIG_SF_DEFAULT_SPEED	30000000
+# define CONFIG_SF_DEFAULT_SPEED	50000000
 # define CONFIG_SPI_FLASH
 # define CONFIG_SPI_FLASH_BAR
 # define CONFIG_SPI_FLASH_SPANSION
@@ -185,6 +225,13 @@
 # define CONFIG_SYS_NAND_SELF_INIT
 # define CONFIG_SYS_NAND_ONFI_DETECTION
 # define CONFIG_MTD_DEVICE
+# define CONFIG_EXTRA_ENV_NAND_BOOT \
+	"nandboot=echo Copying Linux from NAND flash to RAM... && " \
+		"nand read ${kernel_addr} 0x100000 ${kernel_size} && " \
+		"nand read 0x2A00000 0x600000 ${devicetree_size} && " \
+		"bootm ${kernel_addr} - 0x2A00000\0"
+#else
+# define CONFIG_EXTRA_ENV_NAND_BOOT ""
 #endif
 
 #define CONFIG_SYS_I2C_ZYNQ
@@ -209,7 +256,7 @@
 #endif
 
 /* Total Size of Environment Sector */
-#define CONFIG_ENV_SIZE			(128 << 10)
+#define CONFIG_ENV_SIZE			0x10000
 
 /* Allow to overwrite serial and ethaddr */
 #define CONFIG_ENV_OVERWRITE
@@ -231,11 +278,14 @@
 
 # define CONFIG_ENV_SECT_SIZE		CONFIG_ENV_SIZE
 # ifndef CONFIG_ENV_OFFSET
-#  define CONFIG_ENV_OFFSET		0xE0000
+#  define CONFIG_ENV_OFFSET		0x60000
 # endif
 # define CONFIG_CMD_SAVEENV
 #endif
 
+#ifndef CONFIG_EXTRA_ENV_BOOTSCRIPT
+# define CONFIG_EXTRA_ENV_BOOTSCRIPT "autorun.scr"
+#endif
 /* Default environment */
 #define CONFIG_EXTRA_ENV_SETTINGS	\
 	"ethaddr=00:0a:35:00:01:22\0"	\
@@ -246,12 +296,12 @@
 	"devicetree_image=devicetree.dtb\0"	\
 	"devicetree_load_address=0x2000000\0"	\
 	"bitstream_image=system.bit.bin\0"	\
-	"boot_image=BOOT.bin\0"	\
+	"bootscript=" CONFIG_EXTRA_ENV_BOOTSCRIPT "\0" \
 	"loadbit_addr=0x100000\0"	\
 	"loadbootenv_addr=0x2000000\0" \
-	"kernel_size=0x500000\0"	\
-	"devicetree_size=0x20000\0"	\
-	"ramdisk_size=0x5E0000\0"	\
+	"kernel_size=0x400000\0"	\
+	"kernel_addr=0x3000000\0"	\
+	"devicetree_size=0x10000\0"	\
 	"boot_size=0xF00000\0"	\
 	"fdt_high=0x20000000\0"	\
 	"initrd_high=0x20000000\0"	\
@@ -263,19 +313,11 @@
 		"mmcinfo && " \
 		"load mmc 0 ${loadbit_addr} ${bitstream_image} && " \
 		"fpga load 0 ${loadbit_addr} ${filesize}\0" \
-	"norboot=echo Copying Linux from NOR flash to RAM... && " \
-		"cp.b 0xE2100000 ${kernel_load_address} ${kernel_size} && " \
-		"cp.b 0xE2600000 ${devicetree_load_address} ${devicetree_size} && " \
-		"echo Copying ramdisk... && " \
-		"cp.b 0xE2620000 ${ramdisk_load_address} ${ramdisk_size} && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"qspiboot=echo Copying Linux from QSPI flash to RAM... && " \
+	"qspiboot=echo Booting from QSPI flash... && " \
 		"sf probe 0 0 0 && " \
-		"sf read ${kernel_load_address} 0x100000 ${kernel_size} && " \
-		"sf read ${devicetree_load_address} 0x600000 ${devicetree_size} && " \
-		"echo Copying ramdisk... && " \
-		"sf read ${ramdisk_load_address} 0x620000 ${ramdisk_size} && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
+		"sf read 0x2A00000 0x70000 ${devicetree_size} && " \
+		"sf read ${kernel_addr} 0x80000 ${kernel_size} && " \
+		"bootm ${kernel_addr} - 0x2A00000\0" \
 	"uenvboot=" \
 		"if run loadbootenv; then " \
 			"echo Loaded environment from ${bootenv}; " \
@@ -286,66 +328,31 @@
 			"run uenvcmd; " \
 		"fi\0" \
 	"sdboot=if mmcinfo; then " \
+			"setenv bootargs console=ttyPS0,115200 root=/dev/mmcblk0p2 rw rootfstype=ext4 rootwait quiet ; " \
 			"run uenvboot; " \
 			"echo Copying Linux from SD to RAM... && " \
-			"load mmc 0 ${kernel_load_address} ${kernel_image} && " \
-			"load mmc 0 ${devicetree_load_address} ${devicetree_image} && " \
-			"load mmc 0 ${ramdisk_load_address} ${ramdisk_image} && " \
-			"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}; " \
-		"fi\0" \
-	"usbboot=if usb start; then " \
-			"run uenvboot; " \
-			"echo Copying Linux from USB to RAM... && " \
-			"load usb 0 ${kernel_load_address} ${kernel_image} && " \
-			"load usb 0 ${devicetree_load_address} ${devicetree_image} && " \
-			"load usb 0 ${ramdisk_load_address} ${ramdisk_image} && " \
-			"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}; " \
+			"fatload mmc 0 ${kernel_addr} ${kernel_image} && " \
+			"fatload mmc 0 0x2A00000 ${devicetree_image} && " \
+			"bootm ${kernel_addr} - 0x2A00000; " \
 		"fi\0" \
-	"nandboot=echo Copying Linux from NAND flash to RAM... && " \
-		"nand read ${kernel_load_address} 0x100000 ${kernel_size} && " \
-		"nand read ${devicetree_load_address} 0x600000 ${devicetree_size} && " \
-		"echo Copying ramdisk... && " \
-		"nand read ${ramdisk_load_address} 0x620000 ${ramdisk_size} && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
 	"jtagboot=echo TFTPing Linux to RAM... && " \
-		"tftpboot ${kernel_load_address} ${kernel_image} && " \
-		"tftpboot ${devicetree_load_address} ${devicetree_image} && " \
-		"tftpboot ${ramdisk_load_address} ${ramdisk_image} && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"rsa_norboot=echo Copying Image from NOR flash to RAM... && " \
-		"cp.b 0xE2100000 0x100000 ${boot_size} && " \
-		"zynqrsa 0x100000 && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"rsa_nandboot=echo Copying Image from NAND flash to RAM... && " \
-		"nand read 0x100000 0x0 ${boot_size} && " \
-		"zynqrsa 0x100000 && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"rsa_qspiboot=echo Copying Image from QSPI flash to RAM... && " \
-		"sf probe 0 0 0 && " \
-		"sf read 0x100000 0x0 ${boot_size} && " \
-		"zynqrsa 0x100000 && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"rsa_sdboot=echo Copying Image from SD to RAM... && " \
-		"load mmc 0 0x100000 ${boot_image} && " \
-		"zynqrsa 0x100000 && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-	"rsa_jtagboot=echo TFTPing Image to RAM... && " \
-		"tftpboot 0x100000 ${boot_image} && " \
-		"zynqrsa 0x100000 && " \
-		"bootm ${kernel_load_address} ${ramdisk_load_address} ${devicetree_load_address}\0" \
-		DFU_ALT_INFO
-
-/* Default environment */
-#define CONFIG_IPADDR	10.10.70.102
-#define CONFIG_SERVERIP	10.10.70.101
+		"tftp ${kernel_addr} ${kernel_image} && " \
+		"tftp 0x2A00000 ${devicetree_image} && " \
+		"tftp 0x2000000 ${ramdisk_image} && " \
+		"bootm ${kernel_addr} 0x2000000 0x2A00000\0" \
+	CONFIG_EXTRA_ENV_NOR_BOOT \
+	CONFIG_EXTRA_ENV_NAND_BOOT \
+	CONFIG_EXTRA_ENV_USB_BOOT \
+	CONFIG_EXTRA_ENV_RSA_BOOT
 
 /* default boot is according to the bootmode switch settings */
 #if defined(CONFIG_CMD_ZYNQ_RSA)
 #define CONFIG_BOOTCOMMAND		"run rsa_$modeboot"
 #else
-#define CONFIG_BOOTCOMMAND		"run $modeboot"
+# define CONFIG_BOOTCOMMAND	"if mmcinfo; then if fatload mmc 0 0x1900000 ${bootscript}; then source 0x1900000; fi; fi; run $modeboot"
 #endif
-#define CONFIG_BOOTDELAY		3 /* -1 to Disable autoboot */
+#define CONFIG_ZERO_BOOTDELAY_CHECK
+#define CONFIG_BOOTDELAY	0
 #define CONFIG_SYS_LOAD_ADDR		0 /* default? */
 
 /* Miscellaneous configurable options */
@@ -379,7 +386,7 @@
 #define CONFIG_SYS_SDRAM_BASE		0
 
 #define CONFIG_SYS_MEMTEST_START	CONFIG_SYS_SDRAM_BASE
-#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_SDRAM_BASE + 0x1000)
+#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_SDRAM_BASE + 0x8000000)
 
 #define CONFIG_SYS_MALLOC_LEN		0xC00000
 
@@ -418,7 +425,6 @@
 #endif
 
 #define CONFIG_SYS_LDSCRIPT  "arch/arm/cpu/armv7/zynq/u-boot.lds"
-
 /* Commands */
 #include <config_cmd_default.h>
 
@@ -449,6 +455,7 @@
 # define CONFIG_PANIC_HANG
 #endif
 
+
 /* SPL part */
 #define CONFIG_SPL
 #define CONFIG_CMD_SPL
-- 
1.9.1

